if [ "X$1X" == "XhX" ] ; then
    cat << EOFHELP
Usge: $0
 * j (skip chkjss script; chkn)
 * l (skip license check; chkn)
 * k (skip chkbcov check; chkn)
 * o (skip overcommit check; chkn)
 * -v (verbose mode for chkn)
..........
 * os (skip osv-scanner run/it's slow; runsat)
..........
 * v (verbose mode for runyn)
 * f (force mode for runyn)
EOFHELP
    exit
fi

if [ "X`grep "use 2.[345]" .rvmrc|wc -l |awk '{ print $1 }'`X" == "X1X" ] ; then
    bundle ; touch . ; echo "******************** Doing bundle, touch, and exit" ; exit
    #echo "Can't use this script with this repo." 
fi
APPN=`basename $PWD |awk '{ print $1 }'`
if [ "X${APPN}" == "Xsetler" ] ; then
    dosetler
    exit
fi

gem update --system --no-document # 2/17/2018: ADDED.

git config pull.rebase false

if [ "X`grep -c parent .git/config`X" == "X0X" ]
then
    if [ "X`grep -v "^#" $HOME/Projects/do-pull-request-first.txt |grep -c ${APPN}$`X" == "X0X" ]
    then
        : # echo "No parent either place, do nothing"
    else
        echo "Remove parent of [${APPN}] because not in do-pull-request-first.txt file" ; exit
    fi
else
    if [ "X`grep -v "^#" $HOME/Projects/do-pull-request-first.txt |grep -c ${APPN}$`X" == "X0X" ]
    then
        echo "Add to do-pull-request-first.txt file, then run git pull." ; exit
    else
        echo "Running pre-git-pull..."
        git pull parent 2> /dev/null
        # 3/1/2023: Support parent repo's default branch as "master" if in .git/config file.
        if [ "X$?X" == "X0X" ] ; then
            : # ok
        else
            git pull parent master #--allow-unrelated-histories
        fi
    fi
fi    

echo "Running chkn..."
if [ "X`chkn $* | egrep -v "^LINE" | wc -l |awk '{ print $1 }'`X" == "X0X" ] ; then
    : # GOOD: echo "FYI: chkn is ZERO"
else
    if [ "X${APPN}X" == "Xwatir-railsX" ] ; then
        : # EXCEPTION
    else
        if [ "X${APPN}X" == "Xrgsoc-teamsX" ] ; then
            : # EXCEPTION
        else
            echo "FYI: chkn IS NOT ZERO; STOPPING"; chkn $* ; exit
        fi
    fi
fi

if [ "X`bundle -v |grep -c Bundler`X" == "X0X" ] ; then
    echo "Installing bundler..."
    echo "BUNDLER RESULTS/1 CODE=[$?]"
    bundle update --bundler --no-document
    echo "BUNDLER UPDATE RESULTS/2 CODE=[$?]"
else
    : # do nothing
fi

# 2/10/2023: Moved to "runsat" script.
#if [ "X`brakeman 2>&1 |grep -c "brakeman: command not found"`X" == "X1X" ] ; then
#    echo "Installing brakeman..."
#    gem install brakeman
#else
#    : # do nothing
#fi
#
# 2/10/2023: Moved to "runsat" script.
#if [ "X`railroader -A 2>&1 |grep -c "railroader: command not found"`X" == "X1X" ] ; then
#    echo "Installing railroader..."
#    gem install railroader
#else
#    : # do nothing
#fi

BOST="`bundle outdated --strict |tail -1`"
if [ "X${BOST}X" == "XBundle up to date!X" ] ; then
    echo "No gem update needed; leaving the building...1"
    touch .
    lbr 2>&1 |egrep -v "ctags" 
    exit
fi
if [ "X${BOST}X" == "XYour bundle is up to date!X" ] ; then
    echo "No gem update needed; leaving the building...2" ; touch . ; exit
fi

# 3/27/2016: rubygem problem so commenting out following code.
#echo "Running cane..."
#CANERESULTS=`cane 2>&1 |grep "command not found" |wc -l |awk '{ print $1 }'`
#if [ "X${CANERESULTS}X" == "X1X" ] ; then
#    gem install cane
#fi
#
#if [ "X$1X" == "XX" ] ; then
#    # 4/15/2015: Commented out since I did not clean up all repos.
#    # 9/13/2015: Added it back but changed output filter.
#    CANERESULTS=`cane |egrep -v ">80|:|^$"| wc -l |awk '{ print $1 }'`
#    if [ "X${CANERESULTS}X" == "X0X" ] ; then
#        :
#    else
#        echo "CANE MSGS:"
#        cane |egrep -v ">80|:|^$"
#        exit
#    fi
#else
#    echo "Skipping cane run..." > /dev/tty
#fi

echo "Running cleanup..."
#HID: gem cleanup --quiet

echo "Running bundle..."
lu
bundle install 2>&1 |egrep -v "ctags" 
# 3/2/2023: For "newproj" repo.
if [ -f vite.config.ts ] ; then
    bundle exec vite upgrade
fi

if [ -d "public/assets" ] ; then
    echo "YES: public/assets"
    #rake assets:clean
    #rake assets:precompile
else
    echo "NO: public/assets"
fi

if [ $? == 0 ] ; then
    if [ "X${APPN}X" == "X24pullrequestsX" ] ; then
        unset GITHUB_KEY
    fi
#    addm
    if [ -f Rakefile ] ; then
        brt # unkn brt # rake
    else
        echo "No Rakefile so no rake"
    fi

#    # TRY "rails test"
#    RAILSVER=`sort -u .rvmrc |sed -e "s,\.[0-9] --create,," -e "s,.*rails,," |grep "[0-9]"`
#    if [ "X${RAILSVER}X" == "X6X" ] || [ "X${RAILSVER}X" == "X5X" ] ; then
#        echo "5 plus"
#        #rails test # 6/15/2019: Added - TODO: Add conditional for older repos.
#    else
#        echo "< 5 so no 'rails test'"
#    fi

    if [ $? == 0 ] ; then # "rake/arils-cmd run was green (0)
        overcommit --sign
        echo "rake/rails-cmd EXIT STATUS is ZERO - GREAT"
        if [ "X`git diff |grep "^[-+] " |wc -l`X" == "XX" ] ; then
           echo "'GIT DIFF PLUS/MINUS' is EMPTY"
        else
           bl
           echo "........................................"
           #echo "'GIT DIFF PLUS/MINUS' is NOT EMPTY"
gt j
#           git diff |grep "^[-+] " |awk '{ print $2 }' \
#           | sed -e "s/[123].[0-9][0-9]*.[0-9][0-9]*/bundler/" \
#             -e "s/bundler.pre.[12]//" -e "s/2.0.0.pre.1//" \
#           | sort -u | tr "\012" ", " \
#           | sed -e "s/,$//" -e "s/^,//" -e "s,revision:,latest rails," \
#           | grep -v "^$" \
#           > $HOME/.tmp/$$_GEMNAMES
#           cat $HOME/.tmp/$$_GEMNAMES
           echo "........................................"
        fi
        if [ "X`git status -s`X" == "X M Gemfile.lockX" ] ; then
            echo "GOT Gemfile.lock only"
#            if [ X"`wc -l $HOME/.tmp/$$_GEMNAMES | awk '{ print $1 }'`X" == "X1X" ] ; then 
               gacp "Upgraded gem(s): [`cat $HOME/.tmp/$$_GEMNAMES`]"
#            else
#               gacp "Upgraded gems by rebuilding Gemfile.lock file"
#               echo "DEBUG:[`cat $HOME/.tmp/$$_GEMNAMES`"
#            fi
        else
            if [ "X`git status|tail -1`X" == "Xnothing to commit, working directory cleanX" ]
            then
                echo "NOTHING TO COMMIT - NO-OP" ; git status -s
            else
                echo "GOT MORE from GIT STATUS" ; git status -s
            fi
        fi
    else
        echo "rake/rails-cmd EXIST STATUS IS NOT ZERO (BAD) ******************************"
    fi
else
    echo "bundle install EXIT STATUS != 0 (BAD) ******************************"
fi

echo "ggggggggggggggggggggggggggggggggggg"
git gc

# 2/10/2023: Moved to "runsat" script.
#echo "bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
#brm # Run brakeman and railroader tools.

rm -f $HOME/.tmp/$$_GEMNAMES
